<?xml version="1.0"?>

<!-- SF2HF Layout file with multiple bezel options -->

<mamelayout version="2">
	
	<!-- SF2HF bezels -->
	<element name="border">
		<image file="sf2hf_bezel_43.png"/>
	</element>
	<element name="border_ws">
		<image file="sf2hf_bezel_ws.png"/>
	</element>
	
	<!-- Overlay elements -->
	<element name="overlay_day">
  		<image file="..\overlayDay.png"/>
	</element>
	<element name="overlay_day_ws">
  		<image file="..\overlayDayWS.png"/>
	</element>

	<!-- Overlay elements -->
	<element name="overlay_night">
  		<image file="..\overlayNight.png"/>
	</element>
	<element name="overlay_night_ws">
  		<image file="..\overlayNightWS.png"/>
	</element>
	
	<element name="portrait_left" defstate="0x20">
		<!-- Base character states from cheat file (0x00-0x0B) -->
		<image state="0x00" file="Ryu 01 - leftCenter.png" />
		<image state="0x01" file="E Honda 01 - leftCenter.png" />
		<image state="0x02" file="Blanka 01 - leftCenter.png" />
		<image state="0x03" file="Guile 01 - leftCenter.png" />
		<image state="0x04" file="Ken 01 - leftCenter.png" />
		<image state="0x05" file="Chun Li 01 - leftCenter.png" />
		<image state="0x06" file="Zangief 01 - leftCenter.png" />
		<image state="0x07" file="Dhalsim 01 - leftCenter.png" />
		<image state="0x08" file="M Bison 01 - leftCenter.png" />
		<image state="0x09" file="Sagat 01 - leftCenter.png" />
		<image state="0x0A" file="Balrog 01 - leftCenter.png" />
		<image state="0x0B" file="Vega 01 - leftCenter.png" />
		
		<!-- Additional variants for characters with multiple images in names.txt -->
		<image state="0x30" file="Guile 02 - leftCenter.png" />     <!-- Guile 02 -->
		<image state="0x31" file="Zangief 02 - leftCenter.png" />   <!-- Zangief 02 -->
		<image state="0x32" file="Zangief 03 - leftCenter.png" />   <!-- Zangief 03 -->
		<image state="0x33" file="Chun Li 02 - leftCenter.png" />   <!-- Chun Li 02 -->
		<image state="0x34" file="Dhalsim 02 - leftCenter.png" />   <!-- Dhalsim 02 -->
		
		<image state="0x20" file="blank.png" />
	</element>
	<element name="portrait_right" defstate="0x20">
		<!-- Base character states from cheat file (0x00-0x0B) -->
		<image state="0x00" file="Ryu 01 - rightCenter.png" />
		<image state="0x01" file="E Honda 01 - rightCenter.png" />
		<image state="0x02" file="Blanka 01 - rightCenter.png" />
		<image state="0x03" file="Guile 01 - rightCenter.png" />
		<image state="0x04" file="Ken 01 - rightCenter.png" />
		<image state="0x05" file="Chun Li 01 - rightCenter.png" />
		<image state="0x06" file="Zangief 01 - rightCenter.png" />
		<image state="0x07" file="Dhalsim 01 - rightCenter.png" />
		<image state="0x08" file="M Bison 01 - rightCenter.png" />
		<image state="0x09" file="Sagat 01 - rightCenter.png" />
		<image state="0x0A" file="Balrog 01 - rightCenter.png" />
		<image state="0x0B" file="Vega 01 - rightCenter.png" />
		
		<!-- Additional variants for characters with multiple images in names.txt -->
		<image state="0x35" file="Guile 02 - rightCenter.png" />     <!-- Guile 02 -->
		<image state="0x36" file="Zangief 02 - rightCenter.png" />   <!-- Zangief 02 -->
		<image state="0x37" file="Zangief 03 - rightCenter.png" />   <!-- Zangief 03 -->
		<image state="0x38" file="Chun Li 02 - rightCenter.png" />   <!-- Chun Li 02 -->
		<image state="0x39" file="Dhalsim 02 - rightCenter.png" />   <!-- Dhalsim 02 -->
		
		<image state="0x20" file="blank.png" />
	</element>

	<!-- SF2HF 4:3 Bezel View -->
	<view name="SF2HF Bezel 4:3">
		<!-- Base bezel -->
		<element ref="border">
			<bounds x="20" y="0" width="1880" height="1080"/>
		</element>
		<screen index="0">
			<bounds x="240" y="0" width="1440" height="1080"/>
		</screen>
		<!-- Add overlayDay on top of bezel -->
		<element ref="overlay_day">
			<bounds x="0" y="0" width="1920" height="1080"/>
		</element>
		<!-- Left portrait -->
		<element id="pt_p1" ref="portrait_left">
			<bounds x="35" y="5" width="180" height="953"/>
		</element>
		<!-- Right portrait -->
		<element id="pt_p2" ref="portrait_right">
			<bounds x="1705" y="5" width="180" height="953"/>
		</element>
	</view>

	<!-- SF2HF Widescreen Bezel View -->
	<view name="SF2HF Bezel WS">
		<element ref="border_ws">
			<bounds x="0" y="0" width="1920" height="1080"/>
		</element>
		<screen index="0">
			<bounds x="190" y="0" width="1541" height="1080" />
		</screen>
		<!-- Add overlayDayWS on top of bezel -->
		<element ref="overlay_day_ws">
			<bounds x="0" y="0" width="1920" height="1080"/>
		</element>
		<element id="pt_p1" ref="portrait_left">
			<bounds x="10" y="5" width="160" height="953"/>
		</element>
		<element id="pt_p2" ref="portrait_right">
			<bounds x="1750" y="5" width="160" height="953"/>
		</element>
	</view>

	<!-- SF2HF 4:3 Bezel Dark View -->
	<view name="SF2HF Bezel 4:3 Dark">
		<!-- Base bezel -->
		<element ref="border">
			<bounds x="20" y="0" width="1880" height="1080"/>
		</element>
		<screen index="0">
			<bounds x="240" y="0" width="1440" height="1080"/>
		</screen>
		<!-- Add overlayNight on top of bezel -->
		<element ref="overlay_night">
			<bounds x="0" y="0" width="1920" height="1080"/>
		</element>
		<!-- Left portrait -->
		<element id="pt_p1" ref="portrait_left">
			<bounds x="35" y="5" width="180" height="953"/>
		</element>
		<!-- Right portrait -->
		<element id="pt_p2" ref="portrait_right">
			<bounds x="1705" y="5" width="180" height="953"/>
		</element>
	</view>

	<!-- SF2HF Widescreen Bezel Dark View -->
	<view name="SF2HF Bezel WS Dark">
		<element ref="border_ws">
			<bounds x="0" y="0" width="1920" height="1080"/>
		</element>
		<screen index="0">
			<bounds x="190" y="0" width="1541" height="1080" />
		</screen>
		<!-- Add overlayNightWS on top of bezel -->
		<element ref="overlay_night_ws">
			<bounds x="0" y="0" width="1920" height="1080"/>
		</element>
		<element id="pt_p1" ref="portrait_left">
			<bounds x="10" y="5" width="160" height="953"/>
		</element>
		<element id="pt_p2" ref="portrait_right">
			<bounds x="1750" y="5" width="160" height="953"/>
		</element>
	</view>

	<script><![CDATA[
		file:set_resolve_tags_callback(
			function()
				local cpu = file.device:subdevice(":maincpu")
				local mem = cpu.spaces["program"]
				
				-- Function to setup character portraits for a view
				local function setup_view_portraits(view_name)
					local view = file.views[view_name]
					if not view then return end
					
					local p1char = view.items["pt_p1"]
					local p2char = view.items["pt_p2"]
					if not p1char or not p2char then return end
					
					-- Variant override memory locations for SF2HF
					local p1_override_active = 0xFFFF60
					local p1_override_state = 0xFFFF61
					local p2_override_active = 0xFFFF62
					local p2_override_state = 0xFFFF63
					
					-- Debug counter
					local debug_counter = 0
					
					view:set_prepare_items_callback(
						function()
							debug_counter = debug_counter + 1
							local p1_state, p2_state
							
							-- Debug every 60 frames
							if debug_counter % 60 == 0 then
								local p1_override = mem:read_u8(p1_override_active)
								local p1_override_val = mem:read_u8(p1_override_state)
								local p1_char = mem:read_u8(0xFF864F)
								print(string.format("DEBUG SF2HF %s: Frame %d - P1 Override=%d, State=0x%02X, Char=0x%02X", 
									view_name, debug_counter, p1_override, p1_override_val, p1_char))
							end
							
							-- Check P1 variant override
							local p1_override = mem:read_u8(p1_override_active)
							if p1_override == 1 then
								p1_state = mem:read_u8(p1_override_state)
								if debug_counter % 60 == 0 then
									print(string.format("DEBUG SF2HF %s: Using P1 override 0x%02X", view_name, p1_state))
								end
							else
								-- SF2HF character detection - always read character data
								p1_state = mem:read_u8(0xFF864F) -- P1 character from cheat
								-- Only blank if character is invalid
								if p1_state > 0x0B then
									p1_state = 0x20
								end
							end
							
							-- Check P2 variant override
							local p2_override = mem:read_u8(p2_override_active)
							if p2_override == 1 then
								p2_state = mem:read_u8(p2_override_state)
							else
								-- SF2HF P2 character detection - always read character data
								p2_state = mem:read_u8(0xFF894F) -- P2 character from cheat
								-- Only blank if character is invalid
								if p2_state > 0x0B then
									p2_state = 0x20
								end
							end
							
							p1char:set_state(p1_state)
							p2char:set_state(p2_state)
						end
					)
				end
				
				-- Setup portraits for all views
				setup_view_portraits("SF2HF Bezel 4:3")
				setup_view_portraits("SF2HF Bezel WS")
				setup_view_portraits("SF2HF Bezel 4:3 Dark")
				setup_view_portraits("SF2HF Bezel WS Dark")
			end
		)
	]]></script>
</mamelayout>